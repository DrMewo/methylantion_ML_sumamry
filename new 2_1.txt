 

 init = function(){
   e$name="character" 
   e$debug='logical'  
   e$width='numeric' 
   e$height='numeric' 
   e$stage='numeric'  
   e$m='matrix'     
   e$isFail='logical'  
   e$isFail<<-FALSE
   e$stage<-0 
   e$width<-e$height<-4  
   e$step<-1/e$width 
   e$m<-matrix(rep(0,e$width*e$height),nrow=e$width) 
   e$dir<-e$lastd<-'up'  
   e$max<<-4 
   e$step<<-1/e$width 
   e$dir<<-'up'
   e$colors<<-rainbow(14) 
   e$stop<<-FALSE 
   create()
 }
 
 
 
 index<-function(col) which(e$m==col)
     move=function(){
       moveFun=function(x){
         if(e$dir %in% c('right','down')) x<-rev(x)        
         len0<-length(which(x==0)) 
         x1<-x[which(x>0)] 
         pos1<-which(diff(x1)==0)        
         if(length(pos1)==3){ 
           pos1<-pos1[c(1,3)]
         }else if(length(pos1)==2 && diff(pos1)==1){ 
           pos1<-pos1[1]
         }       
         x1[pos1]<-x1[pos1]*2
         x1[pos1+1]<-0        
         x1<-x1[which(x1>0)] 
         x1<-c(x1,rep(0,4))[1:4]     
         if(e$dir %in% c('right','down')) x1<-rev(x1)
         return(x1)
       }      
       last_m<-e$m
       print(e$m)
       if(e$dir=='left')  e$m<<-t(apply(e$m,1,moveFun))
       if(e$dir=='right') e$m<<-t(apply(e$m,1,moveFun))
       if(e$dir=='up')    e$m<<-apply(e$m,2,moveFun)
       if(e$dir=='down')  e$m<<-apply(e$m,2,moveFun)       
       e$stop<<-ifelse(length(which(e$m != last_m))==0,TRUE,FALSE)
     }
 

lose=function(){
   near<-function(x){
	 length(which(diff(x)==0))
   }
   if(length(index(0))==0){
	 h<-apply(e$m,1,near) 
	 v<-apply(e$m,2,near) 	 
	 if(length(which(h>0))==0 & length(which(v>0))==0){
	   fail("No free grid.")
	   return(NULL)
	 }
   }
 }
 
create=function(){
   if(length(index(0))>0 & !e$stop){
	 e$stop<<-TRUE	 
	 one<-sample(c(2,4),1)
	 idx<-ifelse(length(index(0))==1,index(0),sample(index(0),1))
	 e$m[idx]<<-one
   }
}
 
drawTable=function(){
   if(e$isFail) return(NULL)
   plot(0,0,xlim=c(0,1),ylim=c(0,1),type='n',xaxs="i", yaxs="i")
   abline(h=seq(0,1,e$step),col="gray60")
   abline(v=seq(0,1,e$step),col="gray60") 
}
 
 
drawMatrix=function(){
   if(e$isFail) return(NULL)
   a<-c(t(e$m))
   lab<-c(a[13:16],a[9:12],a[5:8],a[1:4])  
   d<-data.frame(x=rep(seq(0,0.95,e$step),e$width),y=rep(seq(0,0.95,e$step),each=e$height),lab=lab)
   df<-d[which(d$lab>0),]
   points(df$x+e$step/2,df$y+e$step/2,col=e$colors[log(df$lab,2)],pch=15,cex=23)
   text(df$x+e$step/2,df$y+e$step/2,label=df$lab,cex=2)
}
 
 
 
 
stage1=function(){
   e$stage<-1
   move()
   lose()
   create()   
   drawTable()
   drawMatrix()  
 }
 
stage0=function(){
   e$stage<-0
   plot(0,0,xlim=c(0,1),ylim=c(0,1),type='n',xaxs="i", yaxs="i")
   text(0.5,0.7,label=e$name,cex=5)
   text(0.5,0.4,label="Any keyboard to start",cex=2,col=4)
   text(0.5,0.3,label="Up,Down,Left,Rigth to control direction",cex=2,col=2)
 }
 
stage2=function(){
  e$stage<-2
   info<-paste("Congratulations! You have max number",max(m),"!")
   print(info)   
   plot(0,0,xlim=c(0,1),ylim=c(0,1),type='n',xaxs="i", yaxs="i")
   text(0.5,0.7,label="Game Over",cex=5)
   text(0.5,0.4,label="Space to restart, q to quit.",cex=2,col=4)
   text(0.5,0.3,label=info,cex=2,col=2)
}
 
 
keydown=function(K){  
    print(paste("keydown:",K,",stage:",e$stage));   
    if(e$stage==0){
    init()
    stage1()
    return(NULL)
}  
  
if(e$stage==2){ 
    if(K=="q") q()
    else if(K==' ') stage0()  
    return(NULL)
} 
  
if(e$stage==1){ 
    if(K == "q") stage2()
	 else {
	   if(tolower(K) %in% c("up","down","left","right")){
		 e$dir<<-tolower(K)
		 print(e$dir)
		 stage1()  
	   }
	 }
	 return(NULL)
   }
   return(NULL)
 }
 
 run<-function(){
  par(mai=rep(0,4),oma=rep(0,4))
  e<<-new.env()
  stage0()
  getGraphicsEvent(prompt="Game",onKeybd=keydown)
}

run()
 
 